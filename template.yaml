AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: A serverless application that allows scholarship providers to create and manage their scholarships.

Globals:
  Function:
    Timeout: 3

Resources:
  providerLogin:
    Type: AWS::Serverless::Function
    Properties:
      Description: A function to login a scholarship provider.
      CodeUri: src/lambdaFunctions/providerLogin
      Handler: index.handler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      Events:
        PostRequest:
          Type: Api
          Properties:
            RestApiId: !Ref ScholarshipApi
            Path: /providers/login
            Method: post
            Auth:
              Authorizer: NONE
      FunctionUrlConfig:
        AuthType: AWS_IAM
      Policies:
        # Give CRUD access to the DynamoDB table
        - DynamoDBReadPolicy:
            TableName: scholarship-providers
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        # Sourcemap: true
        External:
          - "@aws-sdk/client-dynamodb"
          - "@aws-sdk/client-secrets-manager"
        EntryPoints:
          - index.ts
  providerRegistration:
    Type: AWS::Serverless::Function
    Properties: 
      Description: Handles registration of new scholarship provider accounts.
      CodeUri: src/lambdaFunctions/providerRegistration
      Handler: index.handler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      Events:
        PostRequest:
          Type: Api
          Properties:
            RestApiId: !Ref ScholarshipApi
            Path: /providers/registration
            Method: post
            Auth:
              Authorizer: NONE
      Policies: 
        - DynamoDBCrudPolicy:
            TableName: scholarship-providers
    Metadata: 
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        External:
          - "@aws-sdk/client-dynamodb"
          - "@aws-sdk/client-secrets-manager"
        EntryPoints:
          - index.ts
  readScholarshipRequirements:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambdaFunctions/readScholarshipRequirements
      Handler: index.handler
      Runtime: nodejs20.x
      Events:
        GetRequest:
          Type: Api
          Properties:
            RestApiId: !Ref ScholarshipApi
            Path: /providers/requirements
            Method: get
      Policies:
        - DynamoDBReadPolicy:
            TableName: scholarship-providers
      FunctionUrlConfig:
        AuthType: AWS_IAM
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        # Sourcemap: true
        External:
          - "@aws-sdk/client-dynamodb"
        EntryPoints:
          - index.ts
  updateScholarshipRequirements:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambdaFunctions/updateScholarshipRequirements
      Handler: index.handler
      Runtime: nodejs20.x
      Events:
        PostRequest:
          Type: Api
          Properties:
            RestApiId: !Ref ScholarshipApi
            Path: /providers/requirements
            Method: post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: scholarship-providers
      FunctionUrlConfig:
        AuthType: AWS_IAM
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        # Sourcemap: true
        External:
          - "@aws-sdk/client-dynamodb"
        EntryPoints:
          - index.ts
  updateScholarshipEligibility:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambdaFunctions/updateScholarshipEligibility
      Handler: index.handler
      Runtime: nodejs20.x
      Events:
        PostRequest:
          Type: Api
          Properties:
            RestApiId: !Ref ScholarshipApi
            Path: /providers/eligibility
            Method: post
      Policies:
        - DynamoDBReadPolicy:
            TableName: scholarship-providers
      FunctionUrlConfig:
        AuthType: AWS_IAM
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        # Sourcemap: true
        External:
          - "@aws-sdk/client-dynamodb"
        EntryPoints:
          - index.ts
  updateScholarshipContactInfo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambdaFunctions/updateScholarshipContactInfo
      Handler: index.handler
      Runtime: nodejs20.x
      Events:
        PostRequest:
          Type: Api
          Properties:
            RestApiId: !Ref ScholarshipApi
            Path: /providers/contact-info
            Method: post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: scholarship-providers
      FunctionUrlConfig:
        AuthType: AWS_IAM
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        # Sourcemap: true
        External:
          - "@aws-sdk/client-dynamodb"
        EntryPoints:
          - index.ts
  readScholarshipInfo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambdaFunctions/readScholarshipInfo
      Handler: index.handler
      Runtime: nodejs20.x
      Events:
        GetRequest:
          Type: Api
          Properties:
            RestApiId: !Ref ScholarshipApi
            Path: /providers/info
            Method: get
      Policies:
        - DynamoDBReadPolicy:
            TableName: scholarship-providers
      FunctionUrlConfig:
        AuthType: AWS_IAM
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        # Sourcemap: true
        External:
          - "@aws-sdk/client-dynamodb"
        EntryPoints:
          - index.ts
  updateScholarshipInfo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambdaFunctions/updateScholarshipInfo
      Handler: index.handler
      Runtime: nodejs20.x
      Events:
        PostRequest:
          Type: Api
          Properties:
            RestApiId: !Ref ScholarshipApi
            Path: /providers/info
            Method: post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: scholarship-providers
      FunctionUrlConfig:
        AuthType: AWS_IAM
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        # Sourcemap: true
        External:
          - "@aws-sdk/client-dynamodb"
          - "@aws-sdk/client-secrets-manager"
        EntryPoints:
          - index.ts
  readScholarshipEligibility:
    Type: AWS::Serverless::Function
    Properties:
      Description: A function to get the data for a given scholarship's eligibility.
      CodeUri: src/lambdaFunctions/readScholarshipEligibility
      Handler: index.handler
      Runtime: nodejs20.x
      Events:
        GetRequest:
          Type: Api
          Properties:
            RestApiId: !Ref ScholarshipApi
            Path: /providers/eligibility
            Method: get
      Policies:
        # Give CRUD access to the DynamoDB table
        - DynamoDBReadPolicy:
            TableName: scholarship-providers
      FunctionUrlConfig:
        AuthType: AWS_IAM
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        # Sourcemap: true
        External:
          - "@aws-sdk/client-dynamodb"
        EntryPoints:
          - index.ts

  # Define the DynamoDB tables
  ScholarshipProvidersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: scholarship-providers
      AttributeDefinitions:
        - AttributeName: Email
          AttributeType: S
      KeySchema:
        - AttributeName: Email
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 300
        WriteCapacityUnits: 150
  ScholarshipInfoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: scholarship-info
      AttributeDefinitions:
        - AttributeName: Name
          AttributeType: S
      KeySchema:
        - AttributeName: Name
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 300
        WriteCapacityUnits: 150

  #Define the custom authorizer function
  providerAuthorizer:
    Type: AWS::Serverless::Function
    Properties:
      Description: A function to authorize scholarship providers.
      CodeUri: src/lambdaFunctions/providerAuthorizer
      Handler: index.handler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      Policies:
        - DynamoDBReadPolicy:
            TableName: scholarship-providers
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        External:
          - "@aws-sdk/client-secrets-manager"
        EntryPoints:
          - index.ts

  # Define the S3 bucket for the website here.

  #Define the API Gateway endpoints
  ScholarshipApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Auth:
        DefaultAuthorizer: providerAuthorizer
        Authorizers:
          providerAuthorizer:
            FunctionArn: !GetAtt providerAuthorizer.Arn
            Identity:
              Header: Cookie
              ValidationExpression: .*authToken=([^;]+).*


Outputs:
  scholarshipEligibilityApi:
    Description: API Gateway endpoint URL for Prod stage for scholarship eligibility function
    Value: !Sub https://${ScholarshipApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/scholarship-eligibility/
  providerLoginApi:
    Description: API Gateway endpoint URL for Prod stage for provider login function
    Value: !Sub https://${ScholarshipApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/login/
  scholarshipTableName:
    Description: Name of the scholarship info table
    Value: scholarship-providers
Metadata:
  AWS::Composer::Groups:
    Group:
      Label: Provider Form
      Members:
        - providerLogin
        - providerAuthorizer
        - readScholarshipRequirements
        - updateScholarshipRequirements
        - updateScholarshipEligibility
        - readScholarshipContactInfo
        - updateScholarshipContactInfo
        - readScholarshipInfo
        - updateScholarshipInfo
        - readScholarshipEligibility
        - ScholarshipApi
        - ScholarshipProvidersTable
        - ScholarshipInfoTable
